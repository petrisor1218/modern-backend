{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor și Response interceptor rămân neschimbați\n\n// API methods - cu rutele corectate\nconst authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  getCurrentUser: () => api.get('/auth/me')\n};\nconst driversAPI = {\n  getAll: params => api.get('/drivers', {\n    params\n  }),\n  getById: id => api.get(`/drivers/${id}`),\n  create: data => api.post('/drivers', data),\n  update: (id, data) => api.patch(`/drivers/${id}`, data),\n  delete: id => api.delete(`/drivers/${id}`),\n  // Perioade\n  getPerioade: (id, params) => api.get(`/drivers/${id}/perioade`, {\n    params\n  }),\n  addPerioada: (id, data) => api.post(`/drivers/${id}/perioade`, data),\n  updatePerioada: (id, perioadaId, data) => api.patch(`/drivers/${id}/perioade/${perioadaId}`, data),\n  deletePerioada: (id, perioadaId) => api.delete(`/drivers/${id}/perioade/${perioadaId}`),\n  // Salarii\n  getSalariu: (id, params) => api.get(`/drivers/${id}/salariu`, {\n    params\n  }),\n  updateSalariu: (id, data) => api.patch(`/drivers/${id}/salariu`, data),\n  // Documents\n  getDocuments: id => api.get(`/drivers/${id}/documents`),\n  uploadDocument: (id, data) => api.post(`/drivers/${id}/documents/upload`, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  updateDocuments: (id, data) => api.patch(`/drivers/${id}/documents`, data),\n  // Status\n  getStatusHistory: id => api.get(`/drivers/${id}/status-history`),\n  updateStatus: (id, status) => api.patch(`/drivers/${id}/status`, {\n    status\n  })\n};\nconst dashboardAPI = {\n  getStats: () => api.get('/dashboard/stats'),\n  getActivity: () => api.get('/dashboard/activity'),\n  getExpiringDocuments: () => api.get('/dashboard/documents/expiring'),\n  getDriverStatus: () => api.get('/dashboard/drivers/status')\n};\nconst salariesAPI = {\n  getAll: filters => api.get('/salaries', {\n    params: filters\n  }),\n  getByDriver: soferId => api.get(`/salaries/sofer/${soferId}`),\n  create: data => api.post('/salaries', data),\n  update: (id, data) => api.patch(`/salaries/${id}`, data),\n  addBonus: (id, data) => api.post(`/salaries/${id}/bonus`, data),\n  addDeducere: (id, data) => api.post(`/salaries/${id}/deducere`, data),\n  calculate: id => api.post(`/salaries/${id}/calculeaza`)\n};\nconst holidaysAPI = {\n  getAll: params => api.get('/holidays', {\n    params\n  }),\n  getByDriver: (driverId, params) => api.get(`/holidays/driver/${driverId}`, {\n    params\n  }),\n  create: data => api.post('/holidays', data),\n  update: (id, data) => api.patch(`/holidays/${id}`, data),\n  delete: id => api.delete(`/holidays/${id}`)\n};\nconst finesAPI = {\n  getAll: filters => api.get('/fines', {\n    params: filters\n  }),\n  getByDriver: soferId => api.get(`/fines/sofer/${soferId}`),\n  create: data => api.post('/fines', data),\n  update: (id, data) => api.patch(`/fines/${id}`, data),\n  addPayment: (id, data) => api.post(`/fines/${id}/plati`, data),\n  addContestation: (id, data) => api.post(`/fines/${id}/contestatie`, data)\n};\nexport { api as default, authAPI, driversAPI, dashboardAPI, salariesAPI, holidaysAPI, finesAPI };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","authAPI","login","credentials","post","getCurrentUser","get","driversAPI","getAll","params","getById","id","data","update","patch","delete","getPerioade","addPerioada","updatePerioada","perioadaId","deletePerioada","getSalariu","updateSalariu","getDocuments","uploadDocument","updateDocuments","getStatusHistory","updateStatus","status","dashboardAPI","getStats","getActivity","getExpiringDocuments","getDriverStatus","salariesAPI","filters","getByDriver","soferId","addBonus","addDeducere","calculate","holidaysAPI","driverId","finesAPI","addPayment","addContestation","default"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// Request interceptor și Response interceptor rămân neschimbați\n\n// API methods - cu rutele corectate\nconst authAPI = {\n    login: (credentials) => api.post('/auth/login', credentials),\n    getCurrentUser: () => api.get('/auth/me'),\n};\n\nconst driversAPI = {\n    getAll: (params) => api.get('/drivers', { params }),\n    getById: (id) => api.get(`/drivers/${id}`),\n    create: (data) => api.post('/drivers', data),\n    update: (id, data) => api.patch(`/drivers/${id}`, data),\n    delete: (id) => api.delete(`/drivers/${id}`),\n    // Perioade\n    getPerioade: (id, params) => api.get(`/drivers/${id}/perioade`, { params }),\n    addPerioada: (id, data) => api.post(`/drivers/${id}/perioade`, data),\n    updatePerioada: (id, perioadaId, data) => api.patch(`/drivers/${id}/perioade/${perioadaId}`, data),\n    deletePerioada: (id, perioadaId) => api.delete(`/drivers/${id}/perioade/${perioadaId}`),\n    // Salarii\n    getSalariu: (id, params) => api.get(`/drivers/${id}/salariu`, { params }),\n    updateSalariu: (id, data) => api.patch(`/drivers/${id}/salariu`, data),\n    // Documents\n    getDocuments: (id) => api.get(`/drivers/${id}/documents`),\n    uploadDocument: (id, data) => api.post(`/drivers/${id}/documents/upload`, data, {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n        }\n    }),\n    updateDocuments: (id, data) => api.patch(`/drivers/${id}/documents`, data),\n    // Status\n    getStatusHistory: (id) => api.get(`/drivers/${id}/status-history`),\n    updateStatus: (id, status) => api.patch(`/drivers/${id}/status`, { status })\n};\n\nconst dashboardAPI = {\n    getStats: () => api.get('/dashboard/stats'),\n    getActivity: () => api.get('/dashboard/activity'),\n    getExpiringDocuments: () => api.get('/dashboard/documents/expiring'),\n    getDriverStatus: () => api.get('/dashboard/drivers/status')\n};\n\nconst salariesAPI = {\n    getAll: (filters) => api.get('/salaries', { params: filters }),\n    getByDriver: (soferId) => api.get(`/salaries/sofer/${soferId}`),\n    create: (data) => api.post('/salaries', data),\n    update: (id, data) => api.patch(`/salaries/${id}`, data),\n    addBonus: (id, data) => api.post(`/salaries/${id}/bonus`, data),\n    addDeducere: (id, data) => api.post(`/salaries/${id}/deducere`, data),\n    calculate: (id) => api.post(`/salaries/${id}/calculeaza`)\n};\n\nconst holidaysAPI = {\n    getAll: (params) => api.get('/holidays', { params }),\n    getByDriver: (driverId, params) => api.get(`/holidays/driver/${driverId}`, { params }),\n    create: (data) => api.post('/holidays', data),\n    update: (id, data) => api.patch(`/holidays/${id}`, data),\n    delete: (id) => api.delete(`/holidays/${id}`)\n};\n\nconst finesAPI = {\n    getAll: (filters) => api.get('/fines', { params: filters }),\n    getByDriver: (soferId) => api.get(`/fines/sofer/${soferId}`),\n    create: (data) => api.post('/fines', data),\n    update: (id, data) => api.patch(`/fines/${id}`, data),\n    addPayment: (id, data) => api.post(`/fines/${id}/plati`, data),\n    addContestation: (id, data) => api.post(`/fines/${id}/contestatie`, data)\n};\n\nexport { \n    api as default, \n    authAPI, \n    driversAPI, \n    dashboardAPI,\n    salariesAPI,\n    holidaysAPI,\n    finesAPI \n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;;AAEA;AACA,MAAMC,OAAO,GAAG;EACZC,KAAK,EAAGC,WAAW,IAAKV,GAAG,CAACW,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC5DE,cAAc,EAAEA,CAAA,KAAMZ,GAAG,CAACa,GAAG,CAAC,UAAU;AAC5C,CAAC;AAED,MAAMC,UAAU,GAAG;EACfC,MAAM,EAAGC,MAAM,IAAKhB,GAAG,CAACa,GAAG,CAAC,UAAU,EAAE;IAAEG;EAAO,CAAC,CAAC;EACnDC,OAAO,EAAGC,EAAE,IAAKlB,GAAG,CAACa,GAAG,CAAC,YAAYK,EAAE,EAAE,CAAC;EAC1CjB,MAAM,EAAGkB,IAAI,IAAKnB,GAAG,CAACW,IAAI,CAAC,UAAU,EAAEQ,IAAI,CAAC;EAC5CC,MAAM,EAAEA,CAACF,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,YAAYH,EAAE,EAAE,EAAEC,IAAI,CAAC;EACvDG,MAAM,EAAGJ,EAAE,IAAKlB,GAAG,CAACsB,MAAM,CAAC,YAAYJ,EAAE,EAAE,CAAC;EAC5C;EACAK,WAAW,EAAEA,CAACL,EAAE,EAAEF,MAAM,KAAKhB,GAAG,CAACa,GAAG,CAAC,YAAYK,EAAE,WAAW,EAAE;IAAEF;EAAO,CAAC,CAAC;EAC3EQ,WAAW,EAAEA,CAACN,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACW,IAAI,CAAC,YAAYO,EAAE,WAAW,EAAEC,IAAI,CAAC;EACpEM,cAAc,EAAEA,CAACP,EAAE,EAAEQ,UAAU,EAAEP,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,YAAYH,EAAE,aAAaQ,UAAU,EAAE,EAAEP,IAAI,CAAC;EAClGQ,cAAc,EAAEA,CAACT,EAAE,EAAEQ,UAAU,KAAK1B,GAAG,CAACsB,MAAM,CAAC,YAAYJ,EAAE,aAAaQ,UAAU,EAAE,CAAC;EACvF;EACAE,UAAU,EAAEA,CAACV,EAAE,EAAEF,MAAM,KAAKhB,GAAG,CAACa,GAAG,CAAC,YAAYK,EAAE,UAAU,EAAE;IAAEF;EAAO,CAAC,CAAC;EACzEa,aAAa,EAAEA,CAACX,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,YAAYH,EAAE,UAAU,EAAEC,IAAI,CAAC;EACtE;EACAW,YAAY,EAAGZ,EAAE,IAAKlB,GAAG,CAACa,GAAG,CAAC,YAAYK,EAAE,YAAY,CAAC;EACzDa,cAAc,EAAEA,CAACb,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACW,IAAI,CAAC,YAAYO,EAAE,mBAAmB,EAAEC,IAAI,EAAE;IAC5EZ,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EACFyB,eAAe,EAAEA,CAACd,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,YAAYH,EAAE,YAAY,EAAEC,IAAI,CAAC;EAC1E;EACAc,gBAAgB,EAAGf,EAAE,IAAKlB,GAAG,CAACa,GAAG,CAAC,YAAYK,EAAE,iBAAiB,CAAC;EAClEgB,YAAY,EAAEA,CAAChB,EAAE,EAAEiB,MAAM,KAAKnC,GAAG,CAACqB,KAAK,CAAC,YAAYH,EAAE,SAAS,EAAE;IAAEiB;EAAO,CAAC;AAC/E,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAEA,CAAA,KAAMrC,GAAG,CAACa,GAAG,CAAC,kBAAkB,CAAC;EAC3CyB,WAAW,EAAEA,CAAA,KAAMtC,GAAG,CAACa,GAAG,CAAC,qBAAqB,CAAC;EACjD0B,oBAAoB,EAAEA,CAAA,KAAMvC,GAAG,CAACa,GAAG,CAAC,+BAA+B,CAAC;EACpE2B,eAAe,EAAEA,CAAA,KAAMxC,GAAG,CAACa,GAAG,CAAC,2BAA2B;AAC9D,CAAC;AAED,MAAM4B,WAAW,GAAG;EAChB1B,MAAM,EAAG2B,OAAO,IAAK1C,GAAG,CAACa,GAAG,CAAC,WAAW,EAAE;IAAEG,MAAM,EAAE0B;EAAQ,CAAC,CAAC;EAC9DC,WAAW,EAAGC,OAAO,IAAK5C,GAAG,CAACa,GAAG,CAAC,mBAAmB+B,OAAO,EAAE,CAAC;EAC/D3C,MAAM,EAAGkB,IAAI,IAAKnB,GAAG,CAACW,IAAI,CAAC,WAAW,EAAEQ,IAAI,CAAC;EAC7CC,MAAM,EAAEA,CAACF,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,aAAaH,EAAE,EAAE,EAAEC,IAAI,CAAC;EACxD0B,QAAQ,EAAEA,CAAC3B,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACW,IAAI,CAAC,aAAaO,EAAE,QAAQ,EAAEC,IAAI,CAAC;EAC/D2B,WAAW,EAAEA,CAAC5B,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACW,IAAI,CAAC,aAAaO,EAAE,WAAW,EAAEC,IAAI,CAAC;EACrE4B,SAAS,EAAG7B,EAAE,IAAKlB,GAAG,CAACW,IAAI,CAAC,aAAaO,EAAE,aAAa;AAC5D,CAAC;AAED,MAAM8B,WAAW,GAAG;EAChBjC,MAAM,EAAGC,MAAM,IAAKhB,GAAG,CAACa,GAAG,CAAC,WAAW,EAAE;IAAEG;EAAO,CAAC,CAAC;EACpD2B,WAAW,EAAEA,CAACM,QAAQ,EAAEjC,MAAM,KAAKhB,GAAG,CAACa,GAAG,CAAC,oBAAoBoC,QAAQ,EAAE,EAAE;IAAEjC;EAAO,CAAC,CAAC;EACtFf,MAAM,EAAGkB,IAAI,IAAKnB,GAAG,CAACW,IAAI,CAAC,WAAW,EAAEQ,IAAI,CAAC;EAC7CC,MAAM,EAAEA,CAACF,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,aAAaH,EAAE,EAAE,EAAEC,IAAI,CAAC;EACxDG,MAAM,EAAGJ,EAAE,IAAKlB,GAAG,CAACsB,MAAM,CAAC,aAAaJ,EAAE,EAAE;AAChD,CAAC;AAED,MAAMgC,QAAQ,GAAG;EACbnC,MAAM,EAAG2B,OAAO,IAAK1C,GAAG,CAACa,GAAG,CAAC,QAAQ,EAAE;IAAEG,MAAM,EAAE0B;EAAQ,CAAC,CAAC;EAC3DC,WAAW,EAAGC,OAAO,IAAK5C,GAAG,CAACa,GAAG,CAAC,gBAAgB+B,OAAO,EAAE,CAAC;EAC5D3C,MAAM,EAAGkB,IAAI,IAAKnB,GAAG,CAACW,IAAI,CAAC,QAAQ,EAAEQ,IAAI,CAAC;EAC1CC,MAAM,EAAEA,CAACF,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACqB,KAAK,CAAC,UAAUH,EAAE,EAAE,EAAEC,IAAI,CAAC;EACrDgC,UAAU,EAAEA,CAACjC,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACW,IAAI,CAAC,UAAUO,EAAE,QAAQ,EAAEC,IAAI,CAAC;EAC9DiC,eAAe,EAAEA,CAAClC,EAAE,EAAEC,IAAI,KAAKnB,GAAG,CAACW,IAAI,CAAC,UAAUO,EAAE,cAAc,EAAEC,IAAI;AAC5E,CAAC;AAED,SACInB,GAAG,IAAIqD,OAAO,EACd7C,OAAO,EACPM,UAAU,EACVsB,YAAY,EACZK,WAAW,EACXO,WAAW,EACXE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}