{"ast":null,"code":"import axios from 'axios';\n\n// Configurare de bază pentru Axios\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor pentru request-uri\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Interceptor pentru răspunsuri\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (window.location.pathname !== '/login') {\n      window.location = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Definirea API-urilor specifice\n\n// Auth API\nconst authAPI = {\n  login: credentials => api.post('/auth/login', credentials),\n  logout: () => api.post('/auth/logout'),\n  register: data => api.post('/auth/register', data)\n};\n\n// Drivers API\nconst driversAPI = {\n  getAll: () => api.get('/drivers'),\n  getById: id => api.get(`/drivers/${id}`),\n  create: data => api.post('/drivers', data),\n  update: (id, data) => api.put(`/drivers/${id}`, data),\n  delete: id => api.delete(`/drivers/${id}`)\n};\n\n// Dashboard API\nconst dashboardAPI = {\n  getOverview: () => api.get('/dashboard/overview'),\n  getStats: () => api.get('/dashboard/stats')\n};\n\n// Salaries API\nconst salariesAPI = {\n  getAll: () => api.get('/salaries'),\n  getById: id => api.get(`/salaries/${id}`),\n  calculate: data => api.post('/salaries/calculate', data)\n};\n\n// Holidays API\nconst holidaysAPI = {\n  getAll: () => api.get('/holidays'),\n  requestHoliday: data => api.post('/holidays/request', data),\n  approveHoliday: id => api.put(`/holidays/approve/${id}`)\n};\n\n// Fines API\nconst finesAPI = {\n  getAll: () => api.get('/fines'),\n  getById: id => api.get(`/fines/${id}`),\n  payFine: id => api.post(`/fines/${id}/pay`)\n};\n\n// Exportul API-urilor\nexport { api as default, authAPI, driversAPI, dashboardAPI, salariesAPI, holidaysAPI, finesAPI };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","status","removeItem","window","location","pathname","authAPI","login","credentials","post","logout","register","data","driversAPI","getAll","get","getById","id","update","put","delete","dashboardAPI","getOverview","getStats","salariesAPI","calculate","holidaysAPI","requestHoliday","approveHoliday","finesAPI","payFine","default"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Configurare de bază pentru Axios\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Interceptor pentru request-uri\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        console.error('Request error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Interceptor pentru răspunsuri\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            if (window.location.pathname !== '/login') {\n                window.location = '/login';\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Definirea API-urilor specifice\n\n// Auth API\nconst authAPI = {\n    login: (credentials) => api.post('/auth/login', credentials),\n    logout: () => api.post('/auth/logout'),\n    register: (data) => api.post('/auth/register', data),\n};\n\n// Drivers API\nconst driversAPI = {\n    getAll: () => api.get('/drivers'),\n    getById: (id) => api.get(`/drivers/${id}`),\n    create: (data) => api.post('/drivers', data),\n    update: (id, data) => api.put(`/drivers/${id}`, data),\n    delete: (id) => api.delete(`/drivers/${id}`),\n};\n\n// Dashboard API\nconst dashboardAPI = {\n    getOverview: () => api.get('/dashboard/overview'),\n    getStats: () => api.get('/dashboard/stats'),\n};\n\n// Salaries API\nconst salariesAPI = {\n    getAll: () => api.get('/salaries'),\n    getById: (id) => api.get(`/salaries/${id}`),\n    calculate: (data) => api.post('/salaries/calculate', data),\n};\n\n// Holidays API\nconst holidaysAPI = {\n    getAll: () => api.get('/holidays'),\n    requestHoliday: (data) => api.post('/holidays/request', data),\n    approveHoliday: (id) => api.put(`/holidays/approve/${id}`),\n};\n\n// Fines API\nconst finesAPI = {\n    getAll: () => api.get('/fines'),\n    getById: (id) => api.get(`/fines/${id}`),\n    payFine: (id) => api.post(`/fines/${id}/pay`),\n};\n\n// Exportul API-urilor\nexport {\n    api as default,\n    authAPI,\n    driversAPI,\n    dashboardAPI,\n    salariesAPI,\n    holidaysAPI,\n    finesAPI,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}