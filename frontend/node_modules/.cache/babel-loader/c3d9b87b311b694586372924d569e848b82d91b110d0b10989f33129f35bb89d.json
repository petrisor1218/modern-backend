{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (window.location.pathname !== '/login') {\n      window.location = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// API methods\nconst authAPI = {\n  login: credentials => api.post('/api/auth/login', credentials),\n  getCurrentUser: () => api.get('/api/auth/me')\n};\nconst driversAPI = {\n  getAll: params => api.get('/api/drivers', {\n    params\n  }),\n  getById: id => api.get(`/api/drivers/${id}`),\n  create: data => api.post('/api/drivers', data),\n  update: (id, data) => api.patch(`/api/drivers/${id}`, data),\n  delete: id => api.delete(`/api/drivers/${id}`),\n  getPerioade: (id, params) => api.get(`/api/drivers/${id}/perioade`, {\n    params\n  }),\n  addPerioada: (id, data) => api.post(`/api/drivers/${id}/perioade`, data),\n  updatePerioada: (id, perioadaId, data) => api.patch(`/api/drivers/${id}/perioade/${perioadaId}`, data),\n  deletePerioada: (id, perioadaId) => api.delete(`/api/drivers/${id}/perioade/${perioadaId}`),\n  getSalariu: (id, params) => api.get(`/api/drivers/${id}/salariu`, {\n    params\n  }),\n  updateSalariu: (id, data) => api.patch(`/api/drivers/${id}/salariu`, data),\n  getDocuments: id => api.get(`/api/drivers/${id}/documents`),\n  uploadDocument: (id, data) => api.post(`/api/drivers/${id}/documents/upload`, data, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  updateDocuments: (id, data) => api.patch(`/api/drivers/${id}/documents`, data),\n  getStatusHistory: id => api.get(`/api/drivers/${id}/status-history`),\n  updateStatus: (id, status) => api.patch(`/api/drivers/${id}/status`, {\n    status\n  })\n};\nconst dashboardAPI = {\n  getStats: () => api.get('/api/dashboard/stats'),\n  getActivity: () => api.get('/api/dashboard/activity'),\n  getExpiringDocuments: () => api.get('/api/dashboard/documents/expiring'),\n  getDriverStatus: () => api.get('/api/dashboard/drivers/status')\n};\nconst salariesAPI = {\n  getAll: filters => api.get('/api/salaries', {\n    params: filters\n  }),\n  getByDriver: soferId => api.get(`/api/salaries/sofer/${soferId}`),\n  create: data => api.post('/api/salaries', data),\n  update: (id, data) => api.patch(`/api/salaries/${id}`, data),\n  addBonus: (id, data) => api.post(`/api/salaries/${id}/bonus`, data),\n  addDeducere: (id, data) => api.post(`/api/salaries/${id}/deducere`, data),\n  calculate: id => api.post(`/api/salaries/${id}/calculeaza`)\n};\nconst holidaysAPI = {\n  getAll: params => api.get('/api/holidays', {\n    params\n  }),\n  getByDriver: (driverId, params) => api.get(`/api/holidays/driver/${driverId}`, {\n    params\n  }),\n  create: data => api.post('/api/holidays', data),\n  update: (id, data) => api.patch(`/api/holidays/${id}`, data),\n  delete: id => api.delete(`/api/holidays/${id}`)\n};\nconst finesAPI = {\n  getAll: filters => api.get('/api/fines', {\n    params: filters\n  }),\n  getByDriver: soferId => api.get(`/api/fines/sofer/${soferId}`),\n  create: data => api.post('/api/fines', data),\n  update: (id, data) => api.patch(`/api/fines/${id}`, data),\n  addPayment: (id, data) => api.post(`/api/fines/${id}/plati`, data),\n  addContestation: (id, data) => api.post(`/api/fines/${id}/contestatie`, data)\n};\nexport { api as default, authAPI, driversAPI, dashboardAPI, salariesAPI, holidaysAPI, finesAPI };","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","status","removeItem","window","location","pathname","authAPI","login","credentials","post","getCurrentUser","get","driversAPI","getAll","params","getById","id","data","update","patch","delete","getPerioade","addPerioada","updatePerioada","perioadaId","deletePerioada","getSalariu","updateSalariu","getDocuments","uploadDocument","updateDocuments","getStatusHistory","updateStatus","dashboardAPI","getStats","getActivity","getExpiringDocuments","getDriverStatus","salariesAPI","filters","getByDriver","soferId","addBonus","addDeducere","calculate","holidaysAPI","driverId","finesAPI","addPayment","addContestation","default"],"sources":["C:/Users/Administrator/OneDrive/Documente/GitHub/salarizare/modern-backend/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n// Request interceptor\napi.interceptors.request.use(\n    config => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        console.error('Request error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n    response => response,\n    error => {\n        if (error.response?.status === 401) {\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            if (window.location.pathname !== '/login') {\n                window.location = '/login';\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n// API methods\nconst authAPI = {\n    login: (credentials) => api.post('/api/auth/login', credentials),\n    getCurrentUser: () => api.get('/api/auth/me')\n};\n\nconst driversAPI = {\n    getAll: (params) => api.get('/api/drivers', { params }),\n    getById: (id) => api.get(`/api/drivers/${id}`),\n    create: (data) => api.post('/api/drivers', data),\n    update: (id, data) => api.patch(`/api/drivers/${id}`, data),\n    delete: (id) => api.delete(`/api/drivers/${id}`),\n    getPerioade: (id, params) => api.get(`/api/drivers/${id}/perioade`, { params }),\n    addPerioada: (id, data) => api.post(`/api/drivers/${id}/perioade`, data),\n    updatePerioada: (id, perioadaId, data) => api.patch(`/api/drivers/${id}/perioade/${perioadaId}`, data),\n    deletePerioada: (id, perioadaId) => api.delete(`/api/drivers/${id}/perioade/${perioadaId}`),\n    getSalariu: (id, params) => api.get(`/api/drivers/${id}/salariu`, { params }),\n    updateSalariu: (id, data) => api.patch(`/api/drivers/${id}/salariu`, data),\n    getDocuments: (id) => api.get(`/api/drivers/${id}/documents`),\n    uploadDocument: (id, data) => api.post(`/api/drivers/${id}/documents/upload`, data, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n    }),\n    updateDocuments: (id, data) => api.patch(`/api/drivers/${id}/documents`, data),\n    getStatusHistory: (id) => api.get(`/api/drivers/${id}/status-history`),\n    updateStatus: (id, status) => api.patch(`/api/drivers/${id}/status`, { status })\n};\n\nconst dashboardAPI = {\n    getStats: () => api.get('/api/dashboard/stats'),\n    getActivity: () => api.get('/api/dashboard/activity'),\n    getExpiringDocuments: () => api.get('/api/dashboard/documents/expiring'),\n    getDriverStatus: () => api.get('/api/dashboard/drivers/status')\n};\n\nconst salariesAPI = {\n    getAll: (filters) => api.get('/api/salaries', { params: filters }),\n    getByDriver: (soferId) => api.get(`/api/salaries/sofer/${soferId}`),\n    create: (data) => api.post('/api/salaries', data),\n    update: (id, data) => api.patch(`/api/salaries/${id}`, data),\n    addBonus: (id, data) => api.post(`/api/salaries/${id}/bonus`, data),\n    addDeducere: (id, data) => api.post(`/api/salaries/${id}/deducere`, data),\n    calculate: (id) => api.post(`/api/salaries/${id}/calculeaza`)\n};\n\nconst holidaysAPI = {\n    getAll: (params) => api.get('/api/holidays', { params }),\n    getByDriver: (driverId, params) => api.get(`/api/holidays/driver/${driverId}`, { params }),\n    create: (data) => api.post('/api/holidays', data),\n    update: (id, data) => api.patch(`/api/holidays/${id}`, data),\n    delete: (id) => api.delete(`/api/holidays/${id}`)\n};\n\nconst finesAPI = {\n    getAll: (filters) => api.get('/api/fines', { params: filters }),\n    getByDriver: (soferId) => api.get(`/api/fines/sofer/${soferId}`),\n    create: (data) => api.post('/api/fines', data),\n    update: (id, data) => api.patch(`/api/fines/${id}`, data),\n    addPayment: (id, data) => api.post(`/api/fines/${id}/plati`, data),\n    addContestation: (id, data) => api.post(`/api/fines/${id}/contestatie`, data)\n};\n\nexport {\n    api as default,\n    authAPI,\n    driversAPI,\n    dashboardAPI,\n    salariesAPI,\n    holidaysAPI,\n    finesAPI\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}